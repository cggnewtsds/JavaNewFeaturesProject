package cgg.infinitestreams;

import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;
import java.util.stream.DoubleStream;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class InfiniteStreamExample {
	
	public static void main(String[] args) {
		Stream<Integer> iterate = Stream.iterate(0,i->i+2 );
		
		List<Integer> collect = iterate.limit(10).collect(Collectors.toList());
		
		collect.forEach(System.out::println);
		
		System.out.println("---------------------------");
		Stream<String> empty = Stream.<String>empty();

		System.out.println("----------------------------");
		List<String> asList = Arrays.asList("a","b","c");
		Stream<String> stream = asList.stream();
		
		System.out.println("-----------------------------");
		String [] arr={"a","b","c"};
		Stream<String> stream2 = Arrays.stream(arr);
		Stream<String> stream3 = Arrays.stream(arr,1,3);
		stream3.forEach(System.out::println);
		
		System.out.println("---------------------------------------");
		Stream<String> build = Stream.<String>builder().add("AA").add("DD").add("FF").build();
		build.forEach(System.out::println);
		
		System.out.println("----------------------------------------");
		Stream<String> limit = Stream.generate(()->"Hello").limit(10);
		limit.forEach(System.out::println);
		
		System.out.println("------------------------------------------");
		IntStream range = IntStream.range(1, 6);
		range.forEach(System.out::println);
		
		System.out.println("--------------------------------------");
		IntStream rangeClosed = IntStream.rangeClosed(1, 6);
		rangeClosed.forEach(System.out::println);
		
		System.out.println("--------------------------------");
		Random random = new Random();
		DoubleStream doubles = random.doubles(5);
		doubles.forEach(System.out::println);
		
		System.out.println("----------------------------------");
		IntStream chars = "abcd".chars();
		chars.forEach(System.out::println);
	
	}

}
